{{#imports }}
    {{{.}}}
{{/imports}}

{{#moduleDclns }}
    {{{.}}}
{{/moduleDclns}}

// Define built-in functions
any|error {{{exprVarName}}} = ();
handle context_id = java:fromString("");
function java_recall(handle context_id, handle name) returns any|error { }
function java_memorize(handle context_id, handle name, any|error value) { }
function recall_any(string name) returns any { }
function recall_any_error(string name) returns any|error { }
function memorize(string name, any|error value) { }
function stmts() returns any { }
public function main() { }
function init() { }

{{#varDclns}}
    {{#isAny }}
        {{{prefix}}} {{{type}}} {{{name}}} = // value
        <{{{type}}}> recall_any("");
    {{/isAny}}
    {{^isAny }}
        {{{prefix}}} {{{type}}} {{{name}}} = // value
        <{{{type}}}> recall_any_error("");
    {{/isAny}}
{{/varDclns}}

public function run() returns any {
    // Define variables at function level to restrict user
    any|error {{{exprVarName}}} = ();
    handle context_id = java:fromString("");

    // We have to define the variable in a function because
    // some expressions are not allowed in module level as initializers
    {{{lastVarDcln}}}
}
